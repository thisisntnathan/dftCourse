I"Ÿ:<p>If you‚Äôve been following along then you <em>almost</em> have all the pieces to run your first Gaussian job on our cluster.</p>

<p>There‚Äôs just a little bit of work we need to do tie everything together.</p>

<h3 id="our-g16-input-file">Our <kbd>g16</kbd> input file</h3>

<p>We should tweak the <code class="language-plaintext highlighter-rouge">.com</code> file that we were working on last section. First, we‚Äôll get rid of the link 0 commands since we can easily (and more reliably) pass them to <kbd>Gaussian</kbd> as environment variables. Next, we‚Äôll run a geometry optimization and frequency analysis instead of just calculating the energy.</p>

<blockquote>
  <p>A frequency analysis should always accompany geometry optimizations to verify that the final geometry is a global minimum on the potential energy surface (i.e., a true ground state), instead of a saddle point.</p>
</blockquote>

<p>To do this we‚Äôll specify the following keywords:</p>

<!-- markdownlint-disable MD040 -->
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#N M062X/def2svp          ! use the m06-2x functional with def2svp basis set
OPT                       ! conduct a ground state geometry optimization
FREQ=NoRaman              ! conduct a frequency analysis of the optimized geometry
                ! do not calculate Raman stretches (reduces computation time by ~30%)
temperature=273.15        ! standard temperature
Integral(Grid=UltraFine)  ! use an ultrafine integration grid (99,590)
</code></pre></div></div>
<!-- markdownlint-enable MD040 -->

<p>So our full input should look like:</p>

<noscript><pre>400: Invalid request</pre></noscript>
<script src="https://gist.github.com/b20f36ab9304fde103b5a0ae7321fbe7.js"> </script>

<p>Let‚Äôs save it into a folder called <code class="language-plaintext highlighter-rouge">eqMeCyclohexane</code> and start working on our <kbd>SLURM</kbd> script.</p>

<h3 id="slurm-job-script"><kbd>SLURM</kbd> job script</h3>

<p><kbd>Gaussian16</kbd> is slightly more resource intensive than our <code class="language-plaintext highlighter-rouge">hello.sh</code> script, so we‚Äôll need to be a bit better at requesting resources from <kbd>SLURM</kbd> than the minimal requests we made in the last exercise. In your <code class="language-plaintext highlighter-rouge">myFristG16Job</code> make a new submission script with the following resource allocation request:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#SBATCH -p chemq                         # submit to partition: chemq</span>
<span class="c">#SBATCH -J eqMeCyhex                     # job name</span>
<span class="c">#SBATCH -o %x_oe                         # name of stdout/stderr file</span>
<span class="c">#SBATCH -N 1                             # total number of nodes requested</span>
<span class="c">#SBATCH --ntasks-per-node=16             # total number of tasks requested</span>
<span class="c">#SBATCH --mincpus=16                     # assign at least 16 CPUs from each node</span>
<span class="c">#SBATCH --mem=0                          # allocate all of the node's available memory</span>
<span class="c">#SBATCH -t 240:00:00                     # max run time (hhh:mm:ss)</span>
<span class="c">#SBATCH --mail-type=ALL                  # send emails at job START/END/FAIL</span>
<span class="c">#SBATCH --mail-user=&lt;yourNetID&gt;@cornell.edu</span>
</code></pre></div></div>

<blockquote>
  <p>n.b. The <code class="language-plaintext highlighter-rouge">%x</code> in the <code class="language-plaintext highlighter-rouge">-o</code> option line is a <kbd>SLURM</kbd> variable for the job name.</p>
</blockquote>

<p>Now, specify the job details:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">g16root</span><span class="o">=</span>/software                      <span class="c"># the g16.profile file defines the g16</span>
<span class="nb">.</span> <span class="nv">$g16root</span>/g16/bsd/g16.profile         <span class="c"># defaults; ask admin for its location</span>
<span class="nb">export </span><span class="nv">GAUSS_SCRDIR</span><span class="o">=</span>/scratch
<span class="nb">export </span><span class="nv">GAUSS_CDEF</span><span class="o">=</span><span class="s1">'0-15'</span>               <span class="c"># see https://gaussian.com/link0/ for</span>
<span class="nb">export </span><span class="nv">GAUSS_MDEF</span><span class="o">=</span><span class="s1">'28GB'</span>               <span class="c"># environment variable definitions</span>
<span class="nb">export </span><span class="nv">GAUSS_YDEF</span><span class="o">=</span><span class="s1">'eqMeCyhex.chk'</span>
</code></pre></div></div>

<p>The last four lines define environment variables for <kbd>g16</kbd>; these are equivalent to setting <a href="https://gaussian.com/link0/">link 0</a> commands directly in the <code class="language-plaintext highlighter-rouge">.com</code> file, but any link 0 commands specified in the <code class="language-plaintext highlighter-rouge">.com</code> file will override those passed to <kbd>Gaussian</kbd> as environmental variables or command-line options.<sup>1</sup></p>

<blockquote>
  <p>Recall that the memory and CPU assignments requested by <kbd>g16</kbd> must be at most those requested from the <kbd>SLURM</kbd> resource daemon, otherwise the job will fail due it insufficient resources.</p>
</blockquote>

<p>The last thing left to do is to call the program. To run <kbd>g16</kbd> call the executable with <code class="language-plaintext highlighter-rouge">/path/to/g16 &lt;inputFile&gt; &lt;outputFileName&gt;</code> (by convention, <kbd>Gaussian</kbd> output files have the ending <code class="language-plaintext highlighter-rouge">.log</code>):</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$g16root</span>/g16/g16 eqMeCyhex.com eqMeCyhex.log
<span class="c"># on AS-CHEM the g16 program is located at /software/g16/g16 on other clusters</span>
<span class="c"># it may not be in the same place. Ask your system admin for its location!</span>
</code></pre></div></div>

<p>At this point we have everything we need. The rest of our job details will be read into g16 from the input file. Our full job script should look like:</p>

<noscript><pre>400: Invalid request</pre></noscript>
<script src="https://gist.github.com/30ea71341d21b924bb1d73c44b071f22.js"> </script>

<p>Save it into the same folder as <code class="language-plaintext highlighter-rouge">eqMeCyhex.com</code> and now let‚Äôs go submit it!</p>

<h3 id="submitting-our-first-gaussian-job">Submitting our first <kbd>Gaussian</kbd> job</h3>

<p>In FileZilla connect to the CHEM cluster and drag your whole <code class="language-plaintext highlighter-rouge">eqMeCyclohexane</code> folder from your computer to the cluster‚Äôs home directory. <code class="language-plaintext highlighter-rouge">cd</code> into that folder and make sure everything‚Äôs where it should be.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nml64@as-chm-cluster | ~ <span class="nv">$ </span><span class="nb">cd </span>eqMeCyclohexane/
nml64@as-chm-cluster | ~/eqMeCyclohexane <span class="nv">$ </span><span class="nb">ls
</span>eqMeCyclohex.com  g16run.sh
</code></pre></div></div>

<p>Submit the job with <code class="language-plaintext highlighter-rouge">sbatch</code>. Its usually a good idea to make sure that the job has started properly. When <kbd>Gaussian</kbd> jobs fail they typically fail in the first 20 seconds (usually due to a FileIO issue, syntax errors, or insufficient resources) so checking that the job is running smoothly prevents you from coming back later just to realize that your job was killed after 7 seconds because you spelled the input filename incorrectly. If we look at the files in our directory while the job is running, we see three new files our checkpoint file <code class="language-plaintext highlighter-rouge">eqMeCyhex.chk</code>, our <kbd>Gaussian</kbd> output file <code class="language-plaintext highlighter-rouge">eqMeCyhex.log</code>, and our <kbd>SLURM</kbd> output file <code class="language-plaintext highlighter-rouge">eqMeCyhex_oe</code>.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nml64@as-chm-cluster | ~/eqMeCyclohexane <span class="nv">$ </span>sbatch g16run.sh
Submitted batch job 8721
nml64@as-chm-cluster | ~/eqMeCyclohexane <span class="nv">$ </span>squeue
             JOBID PARTITION     NAME     USER ST       TIME  NODES NODELIST<span class="o">(</span>REASON<span class="o">)</span> 
              8721     chemq eqMeCyhe    nml64  R       0:36      1 chem005 
nml64@as-chm-cluster | ~/eqMeCyclohexane <span class="nv">$ </span><span class="nb">ls
</span>eqMeCyhex.chk  eqMeCyhex.com  eqMeCyhex.log  eqMeCyhex_oe  g16run.sh
nml64@as-chm-cluster | ~/eqMeCyclohexane <span class="nv">$ </span><span class="nb">ls
</span>eqMeCyhex.chk  eqMeCyhex.com  eqMeCyhex.log  eqMeCyhex_oe  fort.7  g16run.sh
</code></pre></div></div>

<h4 id="fort7"><code class="language-plaintext highlighter-rouge">fort.7</code></h4>

<p>After the job is completed we see another file <code class="language-plaintext highlighter-rouge">fort.7</code>. After a job finishes <kbd>Gaussian</kbd> ‚Äúpunches out‚Äù (the parlance comes from a time <a href="en.wikipedia.org/wiki/Punched_card">when computers used punched cards as fileIO</a>)<sup>2</sup> a separate output for the results of that calculation. The output can be specified using the <a href="https://gaussian.com/punch/"><code class="language-plaintext highlighter-rouge">Punch</code> keyword</a>, however <kbd>Gaussian</kbd> punches a new <code class="language-plaintext highlighter-rouge">fort.7</code> file at each termination. In our combined optimization/frequency calculation the program terminates twice: once following the optimization and again after the vibrational frequency analysis. So, in a combined job you get only the punch out for the final calculation.</p>

<h3 id="checking-for-successful-termination">Checking for successful termination</h3>

<p>We can do a quick check to make sure our job finished correctly using <code class="language-plaintext highlighter-rouge">tail</code>.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nml64@as-chm-cluster | ~/eqMeCyclohexane <span class="nv">$ </span><span class="nb">tail </span>eqMeCyhex.log


 ... THE UNIVERSE IS NOT ONLY QUEERER THAN WE SUPPOSE,
 BUT QUEERER THAN WE CAN SUPPOSE ... 

                                   <span class="nt">--</span> J. B. S. HALDANE
 Job cpu <span class="nb">time</span>:       0 days  0 hours 27 minutes 52.9 seconds.
 Elapsed <span class="nb">time</span>:       0 days  0 hours  1 minutes 46.1 seconds.
 File lengths <span class="o">(</span>MBytes<span class="o">)</span>:  <span class="nv">RWF</span><span class="o">=</span>     66 <span class="nv">Int</span><span class="o">=</span>      0 <span class="nv">D2E</span><span class="o">=</span>      0 <span class="nv">Chk</span><span class="o">=</span>      5 <span class="nv">Scr</span><span class="o">=</span>      1
 Normal termination of Gaussian 16 at Mon Dec 27 13:06:58 2021.
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">tail -n</code> prints the last <code class="language-plaintext highlighter-rouge">n</code> lines (by default <code class="language-plaintext highlighter-rouge">n</code> is 10) of the file to the console. The first two lines tell us how long the job took, the third tells us the size of the job‚Äôs scratch files, and the final line informs us that <kbd>Gaussian</kbd> terminated without error. Additionally, if your job terminates successfully <kbd>Gaussian</kbd> will print you a quote. If the job had failed the output tail would look something like the code bloc below. Different reasons for failure will produce different looking outputs but all failed jobs will produce an <code class="language-plaintext highlighter-rouge">Error termination</code> message.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nml64@as-chm-cluster | ~/.../NaTMIPS/A3_eee_tol <span class="nv">$ </span><span class="nb">tail </span>eqMeCyhex.log
 Error on total polarization charges <span class="o">=</span> <span class="k">********</span>
 SCF Done:  E<span class="o">(</span>RM062X<span class="o">)</span> <span class="o">=</span>  <span class="nt">-8076</span>.68013868     A.U. after  129 cycles
            <span class="nv">NFock</span><span class="o">=</span>128  <span class="nv">Conv</span><span class="o">=</span>0.45D-02     <span class="nt">-V</span>/T<span class="o">=</span> 7.5222
 SMD-CDS <span class="o">(</span>non-electrostatic<span class="o">)</span> energy       <span class="o">(</span>kcal/mol<span class="o">)</span> <span class="o">=</span>      <span class="nt">-2</span>.87
 <span class="o">(</span>included <span class="k">in </span>total energy above<span class="o">)</span>
 Convergence failure <span class="nt">--</span> run terminated.
 Error termination via Lnk1e <span class="k">in</span> /software/g16/l502.exe at Sat Dec 18 17:05:50 2021.
 Job cpu <span class="nb">time</span>:      14 days  5 hours  4 minutes 13.4 seconds.
 Elapsed <span class="nb">time</span>:       1 days  5 hours 16 minutes 45.2 seconds.
 File lengths <span class="o">(</span>MBytes<span class="o">)</span>:  <span class="nv">RWF</span><span class="o">=</span>    958 <span class="nv">Int</span><span class="o">=</span>      0 <span class="nv">D2E</span><span class="o">=</span>      0 <span class="nv">Chk</span><span class="o">=</span>     45 <span class="nv">Scr</span><span class="o">=</span>      1
</code></pre></div></div>

<h3 id="-great-job-you-just-ran-your-first-gaussian-optimization--"><center>üéâüéâ Great job! You just ran your first <kbd>Gaussian</kbd> optimization! üëèüëè </center></h3>

<p><br /></p>

<p>In the next section, we‚Äôll go over how to examine the output file and parse it for the important thermochemical data.</p>

<p><br /></p>

<table>
  <tbody>
    <tr>
      <td><center>Previous<br /><a href="/ShortCourse/gaussianInputs.html"><kbd>Gaussian</kbd> Input Files</a></center></td>
      <td><center><a href="/Introduction.html">Home</a></center></td>
      <td><center>Next<br /><a href="/ShortCourse/gaussianOutputs.html"><kbd>Gaussian</kbd> Output Files</a></center></td>
    </tr>
  </tbody>
</table>

<p><br /></p>

<h4 id="references">References</h4>

<p>(1) <a href="https://gaussian.com/link0/"><kbd>Gaussian</kbd> link 0</a><br />
(2) <a href="en.wikipedia.org/wiki/Punched_card">Punched Card</a><br />
(3) <a href="https://gaussian.com/punch/">The <kbd>Gaussian</kbd> <code class="language-plaintext highlighter-rouge">Punch</code> keyword</a></p>
:ET